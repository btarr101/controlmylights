name: Build ðŸ”¨ & Deploy ðŸš€

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: client

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: |
            - cwd: ./client
              args: [--frozen-lockfile]

      - run: pnpm build
        working-directory: ./client
        env:
          VITE_API_BASE_URL: https://controlmylights.btarr.xyz/api
          VITE_GITHUB_REPOSITORY_URL: https://github.com/${{ github.repository }}

      - uses: actions/upload-artifact@v4
        with:
          name: public
          path: ./client/dist

  build-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: server

      - uses: actions/cache@v4
        with:
          path: |
            ./.cargo/registry
            ./.cargo/git
            ./server/target
          key: ${{ runner.os }}-server-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo build --verbose --release
        working-directory: ./server

      - uses: actions/upload-artifact@v4
        with:
          name: server
          path: ./server/target/release/controlmylights

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-client
      - build-server
    steps:
      - uses: actions/download-artifact@v4
      - run: ls -la
      - run: ls -la
        working-directory: ./public
      - run: ls -la
        working-directory: ./server

      - uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: ./server/controlmylights
          # target: ${{ secrets.CONTROLMYLIGHTS_BINARY_TARGET }}
          target: ~
          overwrite: true
          debug: true

      - uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: ./public/
          target: ${{ secrets.CONTROLMYLIGHTS_PUBLIC_TARGET }}
          overwrite: true
          debug: true
